package com.github.blovemaple.hura.dal;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class UserConfigExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table user_config
	 * @mbg.generated
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table user_config
	 * @mbg.generated
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table user_config
	 * @mbg.generated
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table user_config
	 * @mbg.generated
	 */
	public UserConfigExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table user_config
	 * @mbg.generated
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table user_config
	 * @mbg.generated
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table user_config
	 * @mbg.generated
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table user_config
	 * @mbg.generated
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table user_config
	 * @mbg.generated
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table user_config
	 * @mbg.generated
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table user_config
	 * @mbg.generated
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table user_config
	 * @mbg.generated
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table user_config
	 * @mbg.generated
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table user_config
	 * @mbg.generated
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table user_config
	 * @mbg.generated
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> hideSectionKeysCriteria;
		protected List<Criterion> allCriteria;
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
			hideSectionKeysCriteria = new ArrayList<Criterion>();
		}

		public List<Criterion> getHideSectionKeysCriteria() {
			return hideSectionKeysCriteria;
		}

		protected void addHideSectionKeysCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			hideSectionKeysCriteria
					.add(new Criterion(condition, value, "com.github.blovemaple.hura.util.StringListTypeHandler"));
			allCriteria = null;
		}

		protected void addHideSectionKeysCriterion(String condition, List<String> value1, List<String> value2,
				String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			hideSectionKeysCriteria.add(
					new Criterion(condition, value1, value2, "com.github.blovemaple.hura.util.StringListTypeHandler"));
			allCriteria = null;
		}

		public boolean isValid() {
			return criteria.size() > 0 || hideSectionKeysCriteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			if (allCriteria == null) {
				allCriteria = new ArrayList<Criterion>();
				allCriteria.addAll(criteria);
				allCriteria.addAll(hideSectionKeysCriteria);
			}
			return allCriteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
			allCriteria = null;
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
			allCriteria = null;
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
			allCriteria = null;
		}

		public Criteria andOpenidIsNull() {
			addCriterion("openid is null");
			return (Criteria) this;
		}

		public Criteria andOpenidIsNotNull() {
			addCriterion("openid is not null");
			return (Criteria) this;
		}

		public Criteria andOpenidEqualTo(String value) {
			addCriterion("openid =", value, "openid");
			return (Criteria) this;
		}

		public Criteria andOpenidNotEqualTo(String value) {
			addCriterion("openid <>", value, "openid");
			return (Criteria) this;
		}

		public Criteria andOpenidGreaterThan(String value) {
			addCriterion("openid >", value, "openid");
			return (Criteria) this;
		}

		public Criteria andOpenidGreaterThanOrEqualTo(String value) {
			addCriterion("openid >=", value, "openid");
			return (Criteria) this;
		}

		public Criteria andOpenidLessThan(String value) {
			addCriterion("openid <", value, "openid");
			return (Criteria) this;
		}

		public Criteria andOpenidLessThanOrEqualTo(String value) {
			addCriterion("openid <=", value, "openid");
			return (Criteria) this;
		}

		public Criteria andOpenidLike(String value) {
			addCriterion("openid like", value, "openid");
			return (Criteria) this;
		}

		public Criteria andOpenidNotLike(String value) {
			addCriterion("openid not like", value, "openid");
			return (Criteria) this;
		}

		public Criteria andOpenidIn(List<String> values) {
			addCriterion("openid in", values, "openid");
			return (Criteria) this;
		}

		public Criteria andOpenidNotIn(List<String> values) {
			addCriterion("openid not in", values, "openid");
			return (Criteria) this;
		}

		public Criteria andOpenidBetween(String value1, String value2) {
			addCriterion("openid between", value1, value2, "openid");
			return (Criteria) this;
		}

		public Criteria andOpenidNotBetween(String value1, String value2) {
			addCriterion("openid not between", value1, value2, "openid");
			return (Criteria) this;
		}

		public Criteria andDefVortlistoIdIsNull() {
			addCriterion("def_vortlisto_id is null");
			return (Criteria) this;
		}

		public Criteria andDefVortlistoIdIsNotNull() {
			addCriterion("def_vortlisto_id is not null");
			return (Criteria) this;
		}

		public Criteria andDefVortlistoIdEqualTo(Long value) {
			addCriterion("def_vortlisto_id =", value, "defVortlistoId");
			return (Criteria) this;
		}

		public Criteria andDefVortlistoIdNotEqualTo(Long value) {
			addCriterion("def_vortlisto_id <>", value, "defVortlistoId");
			return (Criteria) this;
		}

		public Criteria andDefVortlistoIdGreaterThan(Long value) {
			addCriterion("def_vortlisto_id >", value, "defVortlistoId");
			return (Criteria) this;
		}

		public Criteria andDefVortlistoIdGreaterThanOrEqualTo(Long value) {
			addCriterion("def_vortlisto_id >=", value, "defVortlistoId");
			return (Criteria) this;
		}

		public Criteria andDefVortlistoIdLessThan(Long value) {
			addCriterion("def_vortlisto_id <", value, "defVortlistoId");
			return (Criteria) this;
		}

		public Criteria andDefVortlistoIdLessThanOrEqualTo(Long value) {
			addCriterion("def_vortlisto_id <=", value, "defVortlistoId");
			return (Criteria) this;
		}

		public Criteria andDefVortlistoIdIn(List<Long> values) {
			addCriterion("def_vortlisto_id in", values, "defVortlistoId");
			return (Criteria) this;
		}

		public Criteria andDefVortlistoIdNotIn(List<Long> values) {
			addCriterion("def_vortlisto_id not in", values, "defVortlistoId");
			return (Criteria) this;
		}

		public Criteria andDefVortlistoIdBetween(Long value1, Long value2) {
			addCriterion("def_vortlisto_id between", value1, value2, "defVortlistoId");
			return (Criteria) this;
		}

		public Criteria andDefVortlistoIdNotBetween(Long value1, Long value2) {
			addCriterion("def_vortlisto_id not between", value1, value2, "defVortlistoId");
			return (Criteria) this;
		}

		public Criteria andShowQueryHistoryIsNull() {
			addCriterion("show_query_history is null");
			return (Criteria) this;
		}

		public Criteria andShowQueryHistoryIsNotNull() {
			addCriterion("show_query_history is not null");
			return (Criteria) this;
		}

		public Criteria andShowQueryHistoryEqualTo(Boolean value) {
			addCriterion("show_query_history =", value, "showQueryHistory");
			return (Criteria) this;
		}

		public Criteria andShowQueryHistoryNotEqualTo(Boolean value) {
			addCriterion("show_query_history <>", value, "showQueryHistory");
			return (Criteria) this;
		}

		public Criteria andShowQueryHistoryGreaterThan(Boolean value) {
			addCriterion("show_query_history >", value, "showQueryHistory");
			return (Criteria) this;
		}

		public Criteria andShowQueryHistoryGreaterThanOrEqualTo(Boolean value) {
			addCriterion("show_query_history >=", value, "showQueryHistory");
			return (Criteria) this;
		}

		public Criteria andShowQueryHistoryLessThan(Boolean value) {
			addCriterion("show_query_history <", value, "showQueryHistory");
			return (Criteria) this;
		}

		public Criteria andShowQueryHistoryLessThanOrEqualTo(Boolean value) {
			addCriterion("show_query_history <=", value, "showQueryHistory");
			return (Criteria) this;
		}

		public Criteria andShowQueryHistoryIn(List<Boolean> values) {
			addCriterion("show_query_history in", values, "showQueryHistory");
			return (Criteria) this;
		}

		public Criteria andShowQueryHistoryNotIn(List<Boolean> values) {
			addCriterion("show_query_history not in", values, "showQueryHistory");
			return (Criteria) this;
		}

		public Criteria andShowQueryHistoryBetween(Boolean value1, Boolean value2) {
			addCriterion("show_query_history between", value1, value2, "showQueryHistory");
			return (Criteria) this;
		}

		public Criteria andShowQueryHistoryNotBetween(Boolean value1, Boolean value2) {
			addCriterion("show_query_history not between", value1, value2, "showQueryHistory");
			return (Criteria) this;
		}

		public Criteria andHideSectionKeysIsNull() {
			addCriterion("hide_section_keys is null");
			return (Criteria) this;
		}

		public Criteria andHideSectionKeysIsNotNull() {
			addCriterion("hide_section_keys is not null");
			return (Criteria) this;
		}

		public Criteria andHideSectionKeysEqualTo(List<String> value) {
			addHideSectionKeysCriterion("hide_section_keys =", value, "hideSectionKeys");
			return (Criteria) this;
		}

		public Criteria andHideSectionKeysNotEqualTo(List<String> value) {
			addHideSectionKeysCriterion("hide_section_keys <>", value, "hideSectionKeys");
			return (Criteria) this;
		}

		public Criteria andHideSectionKeysGreaterThan(List<String> value) {
			addHideSectionKeysCriterion("hide_section_keys >", value, "hideSectionKeys");
			return (Criteria) this;
		}

		public Criteria andHideSectionKeysGreaterThanOrEqualTo(List<String> value) {
			addHideSectionKeysCriterion("hide_section_keys >=", value, "hideSectionKeys");
			return (Criteria) this;
		}

		public Criteria andHideSectionKeysLessThan(List<String> value) {
			addHideSectionKeysCriterion("hide_section_keys <", value, "hideSectionKeys");
			return (Criteria) this;
		}

		public Criteria andHideSectionKeysLessThanOrEqualTo(List<String> value) {
			addHideSectionKeysCriterion("hide_section_keys <=", value, "hideSectionKeys");
			return (Criteria) this;
		}

		public Criteria andHideSectionKeysLike(List<String> value) {
			addHideSectionKeysCriterion("hide_section_keys like", value, "hideSectionKeys");
			return (Criteria) this;
		}

		public Criteria andHideSectionKeysNotLike(List<String> value) {
			addHideSectionKeysCriterion("hide_section_keys not like", value, "hideSectionKeys");
			return (Criteria) this;
		}

		public Criteria andHideSectionKeysIn(List<List<String>> values) {
			addHideSectionKeysCriterion("hide_section_keys in", values, "hideSectionKeys");
			return (Criteria) this;
		}

		public Criteria andHideSectionKeysNotIn(List<List<String>> values) {
			addHideSectionKeysCriterion("hide_section_keys not in", values, "hideSectionKeys");
			return (Criteria) this;
		}

		public Criteria andHideSectionKeysBetween(List<String> value1, List<String> value2) {
			addHideSectionKeysCriterion("hide_section_keys between", value1, value2, "hideSectionKeys");
			return (Criteria) this;
		}

		public Criteria andHideSectionKeysNotBetween(List<String> value1, List<String> value2) {
			addHideSectionKeysCriterion("hide_section_keys not between", value1, value2, "hideSectionKeys");
			return (Criteria) this;
		}

		public Criteria andModtimeIsNull() {
			addCriterion("modtime is null");
			return (Criteria) this;
		}

		public Criteria andModtimeIsNotNull() {
			addCriterion("modtime is not null");
			return (Criteria) this;
		}

		public Criteria andModtimeEqualTo(Date value) {
			addCriterion("modtime =", value, "modtime");
			return (Criteria) this;
		}

		public Criteria andModtimeNotEqualTo(Date value) {
			addCriterion("modtime <>", value, "modtime");
			return (Criteria) this;
		}

		public Criteria andModtimeGreaterThan(Date value) {
			addCriterion("modtime >", value, "modtime");
			return (Criteria) this;
		}

		public Criteria andModtimeGreaterThanOrEqualTo(Date value) {
			addCriterion("modtime >=", value, "modtime");
			return (Criteria) this;
		}

		public Criteria andModtimeLessThan(Date value) {
			addCriterion("modtime <", value, "modtime");
			return (Criteria) this;
		}

		public Criteria andModtimeLessThanOrEqualTo(Date value) {
			addCriterion("modtime <=", value, "modtime");
			return (Criteria) this;
		}

		public Criteria andModtimeIn(List<Date> values) {
			addCriterion("modtime in", values, "modtime");
			return (Criteria) this;
		}

		public Criteria andModtimeNotIn(List<Date> values) {
			addCriterion("modtime not in", values, "modtime");
			return (Criteria) this;
		}

		public Criteria andModtimeBetween(Date value1, Date value2) {
			addCriterion("modtime between", value1, value2, "modtime");
			return (Criteria) this;
		}

		public Criteria andModtimeNotBetween(Date value1, Date value2) {
			addCriterion("modtime not between", value1, value2, "modtime");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table user_config
	 * @mbg.generated
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table user_config
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}