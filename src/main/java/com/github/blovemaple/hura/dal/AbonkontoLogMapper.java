package com.github.blovemaple.hura.dal;

import com.github.blovemaple.hura.dal.AbonkontoLog;
import com.github.blovemaple.hura.dal.AbonkontoLogExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectKey;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

@Mapper
public interface AbonkontoLogMapper {

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table abonkonto_log
	 * @mbg.generated
	 */
	@SelectProvider(type = AbonkontoLogSqlProvider.class, method = "countByExample")
	long countByExample(AbonkontoLogExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table abonkonto_log
	 * @mbg.generated
	 */
	@DeleteProvider(type = AbonkontoLogSqlProvider.class, method = "deleteByExample")
	int deleteByExample(AbonkontoLogExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table abonkonto_log
	 * @mbg.generated
	 */
	@Delete({ "delete from abonkonto_log", "where id = #{id,jdbcType=BIGINT}" })
	int deleteByPrimaryKey(Long id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table abonkonto_log
	 * @mbg.generated
	 */
	@Insert({ "insert into abonkonto_log (time, status, ", "cost, openid, unionid, ", "msg_type, request, ",
			"response)", "values (#{time,jdbcType=TIMESTAMP}, #{status,jdbcType=VARCHAR}, ",
			"#{cost,jdbcType=INTEGER}, #{openid,jdbcType=VARCHAR}, #{unionid,jdbcType=VARCHAR}, ",
			"#{msgType,jdbcType=VARCHAR}, #{request,jdbcType=VARCHAR}, ", "#{response,jdbcType=VARCHAR})" })
	@SelectKey(statement = "SELECT LAST_INSERT_ID()", keyProperty = "id", before = false, resultType = Long.class)
	int insert(AbonkontoLog record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table abonkonto_log
	 * @mbg.generated
	 */
	@InsertProvider(type = AbonkontoLogSqlProvider.class, method = "insertSelective")
	@SelectKey(statement = "SELECT LAST_INSERT_ID()", keyProperty = "id", before = false, resultType = Long.class)
	int insertSelective(AbonkontoLog record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table abonkonto_log
	 * @mbg.generated
	 */
	@SelectProvider(type = AbonkontoLogSqlProvider.class, method = "selectByExample")
	@Results({ @Result(column = "id", property = "id", jdbcType = JdbcType.BIGINT, id = true),
			@Result(column = "time", property = "time", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "status", property = "status", jdbcType = JdbcType.VARCHAR),
			@Result(column = "cost", property = "cost", jdbcType = JdbcType.INTEGER),
			@Result(column = "openid", property = "openid", jdbcType = JdbcType.VARCHAR),
			@Result(column = "unionid", property = "unionid", jdbcType = JdbcType.VARCHAR),
			@Result(column = "msg_type", property = "msgType", jdbcType = JdbcType.VARCHAR),
			@Result(column = "request", property = "request", jdbcType = JdbcType.VARCHAR),
			@Result(column = "response", property = "response", jdbcType = JdbcType.VARCHAR) })
	List<AbonkontoLog> selectByExample(AbonkontoLogExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table abonkonto_log
	 * @mbg.generated
	 */
	@Select({ "select", "id, time, status, cost, openid, unionid, msg_type, request, response", "from abonkonto_log",
			"where id = #{id,jdbcType=BIGINT}" })
	@Results({ @Result(column = "id", property = "id", jdbcType = JdbcType.BIGINT, id = true),
			@Result(column = "time", property = "time", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "status", property = "status", jdbcType = JdbcType.VARCHAR),
			@Result(column = "cost", property = "cost", jdbcType = JdbcType.INTEGER),
			@Result(column = "openid", property = "openid", jdbcType = JdbcType.VARCHAR),
			@Result(column = "unionid", property = "unionid", jdbcType = JdbcType.VARCHAR),
			@Result(column = "msg_type", property = "msgType", jdbcType = JdbcType.VARCHAR),
			@Result(column = "request", property = "request", jdbcType = JdbcType.VARCHAR),
			@Result(column = "response", property = "response", jdbcType = JdbcType.VARCHAR) })
	AbonkontoLog selectByPrimaryKey(Long id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table abonkonto_log
	 * @mbg.generated
	 */
	@UpdateProvider(type = AbonkontoLogSqlProvider.class, method = "updateByExampleSelective")
	int updateByExampleSelective(@Param("record") AbonkontoLog record, @Param("example") AbonkontoLogExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table abonkonto_log
	 * @mbg.generated
	 */
	@UpdateProvider(type = AbonkontoLogSqlProvider.class, method = "updateByExample")
	int updateByExample(@Param("record") AbonkontoLog record, @Param("example") AbonkontoLogExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table abonkonto_log
	 * @mbg.generated
	 */
	@UpdateProvider(type = AbonkontoLogSqlProvider.class, method = "updateByPrimaryKeySelective")
	int updateByPrimaryKeySelective(AbonkontoLog record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table abonkonto_log
	 * @mbg.generated
	 */
	@Update({ "update abonkonto_log", "set time = #{time,jdbcType=TIMESTAMP},", "status = #{status,jdbcType=VARCHAR},",
			"cost = #{cost,jdbcType=INTEGER},", "openid = #{openid,jdbcType=VARCHAR},",
			"unionid = #{unionid,jdbcType=VARCHAR},", "msg_type = #{msgType,jdbcType=VARCHAR},",
			"request = #{request,jdbcType=VARCHAR},", "response = #{response,jdbcType=VARCHAR}",
			"where id = #{id,jdbcType=BIGINT}" })
	int updateByPrimaryKey(AbonkontoLog record);
}